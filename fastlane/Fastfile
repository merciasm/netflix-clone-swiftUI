# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Generate certificates for development and distribution"
  lane :certificates do
    sync_code_signing(
      app_identifier: ["com.jungledevs.netflix-clone", "com.jungledevs.netflix-clone.staging"],
      type: "development"
    )
    sync_code_signing(
      app_identifier: ["com.jungledevs.netflix-clone", "com.jungledevs.netflix-clone.staging"],
      type: "appstore"
    )
  end

  desc "Push a new alpha build to TestFlight from staging scheme"
  lane :alpha do
    send_build_to_testflight(app_identifier: "com.jungledevs.netflix-clone.staging", scheme: "netflix-clone Staging")
  end

  desc "Push a new beta build to TestFlight from production scheme"
  lane :beta do
    send_build_to_testflight(app_identifier: "com.jungledevs.netflix-clone", scheme: "netflix-clone Production")
  end

  def send_build_to_testflight(app_identifier:, scheme:)
    get_certificates(
      output_path: "Build"
    )

    get_provisioning_profile(
      app_identifier: app_identifier,
      output_path: "Build",
      readonly: true
    )

    increment_build_number

    build_app(
      workspace: "netflix-clone.xcworkspace",
      scheme: scheme,
      output_directory: "Build",
      output_name: "app"
    )

    upload_to_testflight(
      app_identifier: app_identifier,
      skip_waiting_for_build_processing: true
    )

    version_number = get_version_number(xcodeproj: "netflix-clone.xcodeproj", target: "netflix-clone")
    build_number = get_build_number(xcodeproj: "netflix-clone.xcodeproj")

    commit_version_bump(
      message: "[fastlane] Increase build number to #{build_number}"
    )

    push_to_git_remote

    slack(
      message: "Build sent to Testflight with version #{version_number}, build #{build_number}"
    )
  end
end
